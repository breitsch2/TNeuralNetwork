Version:0.9
StartHTML:0000000105
EndHTML:0000184580
StartFragment:0000001053
EndFragment:0000184564
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { color: #0066CC; text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #00FF00; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000080; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #FF0000; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-reservedword">unit</span><span class="pas1-space"> NeuralNetwork_mX4_onwork_1</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">interface
</span><span class="pas1-comment">//First Developed in 1999 B. G&uuml;ltekin &Ccedil;etiner
//Slight changes made in 2023 B. G&uuml;ltekin &Ccedil;etiner
//adapt to maXbox4 by Max , July 2023
//https://github.com/drcetiner/TNeuralNetwork/blob/main/NeuralNetwork.pas

{Uses
Windows,SysUtils,Types, Classes,Vcl.StdCtrls,Vcl.Graphics,Vcl.Controls,Vcl.ExtCtrls,vcl.Dialogs,
  ShellAPI,
  Messages,
  IniFiles;   }

</span><span class="pas1-reservedword">Type

</span><span class="pas1-space">                  NWFH</span><span class="pas1-symbol">=</span><span class="pas1-reservedword">record
</span><span class="pas1-space">                   CR</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//[84];
</span><span class="pas1-space">                   KTMNSYS</span><span class="pas1-symbol">:</span><span class="pas1-identifier">byte</span><span class="pas1-symbol">;
</span><span class="pas1-space">                   KTMNLR</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//[19];
</span><span class="pas1-space">                   OO</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">;
</span><span class="pas1-space">                   MO</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">;
</span><span class="pas1-space">                   NTR</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Longint</span><span class="pas1-symbol">;
</span><span class="pas1-space">                   TRDT</span><span class="pas1-symbol">:</span><span class="pas1-identifier">TDateTime</span><span class="pas1-symbol">;
</span><span class="pas1-space">                  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-identifier">NWWT</span><span class="pas1-symbol">=</span><span class="pas1-reservedword">record
</span><span class="pas1-space">       Value</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Double</span><span class="pas1-symbol">;
</span><span class="pas1-space">     </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-space">  </span><span class="pas1-comment">//TNeuralNetwork = class(TImage)
</span><span class="pas1-space">  </span><span class="pas1-comment">//private
</span><span class="pas1-space">    </span><span class="pas1-comment">{ Private declarations }
</span><span class="pas1-space">   </span><span class="pas1-reservedword">var</span><span class="pas1-space"> 
    FNetHeader</span><span class="pas1-symbol">:</span><span class="pas1-identifier">NWFH</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FWeightsinFile</span><span class="pas1-symbol">:</span><span class="pas1-identifier">NWWT</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FClsblr</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FNumberOfTraining</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Longint</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FLearningRate </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FMomentumRate </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FRMSError </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FNetwork </span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringList</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ro </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    RoBias</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    BiasChange</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    MinimumInputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    MaximumInputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    MinimumOutputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    MaximumOutputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Desired </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    aDifference </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Neurons </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FWeights </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    WeightChange </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Biases </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FInputNumber</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FOutputNumber</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FLayersNumber</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FInitialized</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FErrorCodes</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    FNeuronWidth</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">       </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> RefreshNetworkImage</span><span class="pas1-symbol">;
</span><span class="pas1-space">       </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> Dimensionalize</span><span class="pas1-symbol">;
</span><span class="pas1-space">       </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SetNeuronsinLayers</span><span class="pas1-symbol">(</span><span class="pas1-identifier">value</span><span class="pas1-symbol">:</span><span class="pas1-identifier">tstringlist</span><span class="pas1-symbol">);
</span><span class="pas1-space">       </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> ForwardProcessing</span><span class="pas1-symbol">;
</span><span class="pas1-space">       </span><span class="pas1-reservedword">function</span><span class="pas1-space"> ScaledValue</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Min</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Max</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">):</span><span class="pas1-identifier">double</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//protected
</span><span class="pas1-space">    </span><span class="pas1-comment">{ Protected declarations }
</span><span class="pas1-space"> </span><span class="pas1-comment">// public
</span><span class="pas1-space">    </span><span class="pas1-comment">{ Public declarations }
</span><span class="pas1-space">    </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> </span><span class="pas1-comment">{constructor}</span><span class="pas1-space"> createNetwork </span><span class="pas1-symbol">(</span><span class="pas1-identifier">AOWner </span><span class="pas1-symbol">:</span><span class="pas1-space"> TComponent</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">//override;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> </span><span class="pas1-comment">{destructor}</span><span class="pas1-space"> destroyNetwork</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//override;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> Train</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetInputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Inputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetExpectedOutputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Outputs</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> GetOutputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Var</span><span class="pas1-space"> Outputs</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> Initialize</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Randomized</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> GetOutputsFromInputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Inputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> Outputs </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> Recall</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetInputMinimums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> InputMinimums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetInputMaximums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> InputMaximums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetOutputMinimums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> OutputMinimums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetOutputMaximums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> OutputMaximums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetAllOutputRange</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Minimum</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Maximum</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetAllInputRange</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Minimum</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Maximum</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> DrawNetwork</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> LoadNetwork</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> SaveNetwork</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//published
</span><span class="pas1-space">    </span><span class="pas1-comment">{ Published declarations }
</span><span class="pas1-space">    </span><span class="pas1-reservedword">var</span><span class="pas1-space"> LearningRate </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">// read FLearningRate write FLearningRate;
</span><span class="pas1-space">     MomentumRate </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read FMomentumRate write FMomentumRate;
</span><span class="pas1-space">     nNetwork</span><span class="pas1-symbol">:</span><span class="pas1-identifier">TStringList</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//&amp;&amp;read FNetwork write SetNeuronsinLayers;
</span><span class="pas1-space">     NumberOfInputs</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read FInputNumber;
</span><span class="pas1-space">     NumberOfOutputs</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read FOutputNumber;
</span><span class="pas1-space">     NumberOfLayers</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//7/read FLayersNumber;
</span><span class="pas1-space">     Initialized</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read FInitialized;
</span><span class="pas1-space">     RMSError</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read; FRMSError;
</span><span class="pas1-space">     NeuronWidth</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read; FNeuronWidth write FNeuronWidth;
</span><span class="pas1-space">     NumberOfTraining</span><span class="pas1-symbol">:</span><span class="pas1-identifier">longint</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//read FNumberOfTraining;
//end;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> </span><span class="pas1-reservedword">Register</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">implementation

procedure</span><span class="pas1-space"> </span><span class="pas1-reservedword">Register</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//RegisterComponents('Additional', [TNeuralNetwork]);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-comment">{ TNeuralNetwork }

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SetNeuronsinLayers</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringList</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Assign</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-comment">{
procedure TNeuralNetwork.SetLogs(Value: TStringList);
begin
  Flogs.Assign(Value);
end;
}

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> ScaledValue</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Min</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Max</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">):</span><span class="pas1-identifier">double</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Max</span><span class="pas1-symbol">-</span><span class="pas1-identifier">Min</span><span class="pas1-symbol">)=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        Result</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">     </span><span class="pas1-reservedword">end
</span><span class="pas1-space">     </span><span class="pas1-reservedword">else</span><span class="pas1-space"> Result</span><span class="pas1-symbol">:=(</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">-</span><span class="pas1-identifier">min</span><span class="pas1-symbol">)/(</span><span class="pas1-identifier">Max</span><span class="pas1-symbol">-</span><span class="pas1-identifier">Min</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Dimensionalize</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  i</span><span class="pas1-symbol">,</span><span class="pas1-space"> j </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin</span><span class="pas1-space">        </span><span class="pas1-comment">{***** SET MATRIX SIZES *****}
</span><span class="pas1-reservedword">Try
</span><span class="pas1-space">  </span><span class="pas1-comment">//FNumberOfTraining:=0;
</span><span class="pas1-space">  
  FLayersNumber</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FInputNumber</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">[0]);
</span><span class="pas1-space">  FOutputNumber</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">FLayersNumber</span><span class="pas1-symbol">-1]);
</span><span class="pas1-space">  FInitialized</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">true</span><span class="pas1-symbol">;

</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">);
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ro</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]));
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ro</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1);
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">BiasChange</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1]));
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">BiasChange</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1]));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1);
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">WeightChange</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]));
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">WeightChange</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1]));
</span><span class="pas1-space">      SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">WeightChange</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">],</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1]));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">,</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">fnetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1]));
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aDifference</span><span class="pas1-symbol">,</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">fnetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1]));

</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">MinimumInputs</span><span class="pas1-symbol">,</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[0]));
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">MaximumInputs</span><span class="pas1-symbol">,</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[0]));

</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">MinimumOutputs</span><span class="pas1-symbol">,</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">fnetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1]));
</span><span class="pas1-space">  SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">MaximumOutputs</span><span class="pas1-symbol">,</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Strings</span><span class="pas1-symbol">[</span><span class="pas1-identifier">fnetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1]));
</span><span class="pas1-reservedword">Except</span><span class="pas1-space"> </span><span class="pas1-comment">{on EStringListError do raise}</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-string">'Error in Network Structure'</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//Except

</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> createNetwork</span><span class="pas1-symbol">(</span><span class="pas1-identifier">AOWner</span><span class="pas1-symbol">:</span><span class="pas1-space"> TComponent</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//inherited create(AOwner);

</span><span class="pas1-space">  FClsblr</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">true</span><span class="pas1-symbol">;
</span><span class="pas1-space">  nNetwork</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">TStringList</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FNetwork</span><span class="pas1-symbol">:=</span><span class="pas1-space"> nNetwork</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FInitialized</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">false</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FLearningRate </span><span class="pas1-symbol">:=</span><span class="pas1-float">0.9</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FMomentumRate </span><span class="pas1-symbol">:=</span><span class="pas1-float">0.39</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//Width := 120;
</span><span class="pas1-space">  </span><span class="pas1-comment">//Height :=120;
</span><span class="pas1-space">  NeuronWidth</span><span class="pas1-symbol">:=5;
</span><span class="pas1-space">  FRMSError</span><span class="pas1-symbol">:=1;
</span><span class="pas1-space">  FNumberOfTraining</span><span class="pas1-symbol">:=1;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> </span><span class="pas1-comment">{destructor}</span><span class="pas1-space"> destroyNetwork</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//inherited;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//}

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Train</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  i</span><span class="pas1-symbol">,</span><span class="pas1-space"> j</span><span class="pas1-symbol">,</span><span class="pas1-space"> k </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> TotalRo</span><span class="pas1-symbol">,</span><span class="pas1-identifier">TotalRoBias </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  Recall</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FNumberOfTraining</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNumberOfTraining</span><span class="pas1-symbol">+1;
</span><span class="pas1-space">  FRMSError</span><span class="pas1-symbol">:=0;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    aDifference</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">)][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-space">    FRMSError</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FRMSError</span><span class="pas1-symbol">+</span><span class="pas1-identifier">sqr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aDifference</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  FRMSError</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FRMSError</span><span class="pas1-symbol">/2;
</span><span class="pas1-space">  </span><span class="pas1-comment">{***** ro for output *****}
</span><span class="pas1-space">  i</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aDifference</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    ro</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=(1-</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">])*</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]*</span><span class="pas1-identifier">aDifference</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">];
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">  </span><span class="pas1-comment">{***** ro for other layers *****}
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">)-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">downto</span><span class="pas1-space"> </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      TotalRo </span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        TotalRo</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">TotalRo</span><span class="pas1-symbol">+</span><span class="pas1-identifier">ro</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]*</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">];
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">      ro</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=(1-</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">])*</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]*</span><span class="pas1-identifier">TotalRo</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">{***** change for output weight *****}
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">)-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">downto</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> 
      </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        WeightChange</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FLearningRate</span><span class="pas1-symbol">*</span><span class="pas1-identifier">ro</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]*</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]+
</span><span class="pas1-space">                                   FMomentumRate</span><span class="pas1-symbol">*</span><span class="pas1-identifier">WeightChange</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">];
</span><span class="pas1-space">        FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]+</span><span class="pas1-identifier">WeightChange</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">];
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> ForwardProcessing</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  i</span><span class="pas1-symbol">,</span><span class="pas1-identifier">j</span><span class="pas1-symbol">,</span><span class="pas1-identifier">k</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">  NetWeight </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=1</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      NetWeight </span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        NetWeight</span><span class="pas1-symbol">:=</span><span class="pas1-space"> NetWeight </span><span class="pas1-symbol">+</span><span class="pas1-space"> Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]</span><span class="pas1-space"> </span><span class="pas1-symbol">*</span><span class="pas1-space"> FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">];
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">      Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=1/(1+</span><span class="pas1-identifier">exp</span><span class="pas1-symbol">(-</span><span class="pas1-identifier">NetWeight</span><span class="pas1-symbol">-</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">    </span><span class="pas1-comment">{
for i:=0 to High(FWeights) do
  for j:=0 to High(FWeights[i]) do
      for k:=0 to High(FWeights[i,j]) do
           Flogs.Add('New FWeights['+IntTostr(i)+','+IntTostr(j)+','+ IntTostr(k)+')='+FloatTostr(FWeights[i,j,k]));

  for i:=0 to High(Biases) do
    for j:=0 to High(Biases[i]) do
      Flogs.Add('New Bias('+IntTostr(i)+','+IntTostr(j)+')='+FloatTostr(Biases[i,j]));
     }
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> Recall</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">    ForwardProcessing</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Initialize</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Randomized</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  i</span><span class="pas1-symbol">,</span><span class="pas1-identifier">j</span><span class="pas1-symbol">,</span><span class="pas1-identifier">k</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  FNumberOfTraining</span><span class="pas1-symbol">:=0;
</span><span class="pas1-space">  Dimensionalize</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> Randomized </span><span class="pas1-reservedword">then</span><span class="pas1-space"> Randomize</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">{***** Giving random values to FWeights and biases *****}
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">      </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">           FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">random</span><span class="pas1-symbol">(4);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">random</span><span class="pas1-symbol">(4);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Function</span><span class="pas1-space"> </span><span class="pas1-comment">{TNeuralNetwork.}</span><span class="pas1-identifier">LoadNetwork</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Var
</span><span class="pas1-space">   Successfull</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;</span><span class="pas1-space">   F</span><span class="pas1-symbol">:</span><span class="pas1-identifier">TextFile</span><span class="pas1-symbol">;
</span><span class="pas1-space">   i</span><span class="pas1-symbol">,</span><span class="pas1-identifier">j</span><span class="pas1-symbol">,</span><span class="pas1-identifier">k</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space">         FirstLine</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">   NwCount</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Katman</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space">      Res1</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Res2</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   Dosya1</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">File</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//of NWFH;
</span><span class="pas1-space">   Dosya2</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">File</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//of NWWT;
</span><span class="pas1-space">   ExtKonum</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> FClsblr </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> false</span><span class="pas1-symbol">;
</span><span class="pas1-space">     ShowMessage</span><span class="pas1-symbol">(</span><span class="pas1-string">'You can load network if you are registered'</span><span class="pas1-symbol">)
</span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">Try
</span><span class="pas1-space">   Successfull</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">true</span><span class="pas1-symbol">;
</span><span class="pas1-space">   FileName</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">AnsiUpperCase</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">);</span><span class="pas1-space"> AssignFile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya1</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">);
</span><span class="pas1-space">   ExtKonum</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">pos</span><span class="pas1-symbol">(</span><span class="pas1-string">'.NET'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">);</span><span class="pas1-space"> delete</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">,</span><span class="pas1-identifier">ExtKonum</span><span class="pas1-symbol">,4);
</span><span class="pas1-space">   AssignFile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya2</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">+</span><span class="pas1-string">'.dat'</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-comment">//{$I-} Reset(Dosya1); {$I+} Res1:=IOResult;
</span><span class="pas1-space">   </span><span class="pas1-comment">//{$I-} Reset(Dosya2); {$I+} Res2:=IOResult;
</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> Res1</span><span class="pas1-symbol">&lt;&gt;0</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">         Successfull</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">false</span><span class="pas1-symbol">;
</span><span class="pas1-space">         </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-string">'Error in opening Network Definition file'</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end
</span><span class="pas1-space">   </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">if</span><span class="pas1-space"> Res2</span><span class="pas1-symbol">&lt;&gt;0</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">         Successfull</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">false</span><span class="pas1-symbol">;
</span><span class="pas1-space">         </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-string">'Error in opening Network data file'</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end
</span><span class="pas1-space">   </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Clear</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-comment">// File Format

</span><span class="pas1-space">        </span><span class="pas1-comment">//Read(Dosya1,FNetHeader); //Read(Dosya1,FirstLine);
</span><span class="pas1-space">        FLayersNumber</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNSYS</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FLearningRate</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">OO</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FMomentumRate</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">MO</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNumberOfTraining</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">NTR</span><span class="pas1-symbol">;
</span><span class="pas1-space">      	NwCount</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNSYS</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> NwCount</span><span class="pas1-symbol">-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            Katman</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">Ord</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNLR</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1]);
</span><span class="pas1-space">            FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Add</span><span class="pas1-symbol">(</span><span class="pas1-identifier">IntToStr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Katman</span><span class="pas1-symbol">));
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNetwork</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">;
</span><span class="pas1-space">        closefile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya1</span><span class="pas1-symbol">);
</span><span class="pas1-space">        Dimensionalize</span><span class="pas1-symbol">;

</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">           </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">              </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">                   </span><span class="pas1-comment">//Read(Dosya2,FWeightsinFile);
</span><span class="pas1-space">                   FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">              </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">           </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">                </span><span class="pas1-comment">//Read(Dosya2,FWeightsinFile);
</span><span class="pas1-space">		Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">           </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-comment">//All inputs range
</span><span class="pas1-space">        </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">	    </span><span class="pas1-comment">//Read(dosya2,FWeightsinFile);
</span><span class="pas1-space">            MinimumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">	    </span><span class="pas1-comment">//Read(dosya2,FWeightsinFile);
</span><span class="pas1-space">            MaximumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">	    </span><span class="pas1-comment">//Read(dosya2,FWeightsinFile);
</span><span class="pas1-space">	    MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">	    </span><span class="pas1-comment">//Read(dosya2,FWeightsinFile);
</span><span class="pas1-space">	    MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">     closefile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya2</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">   result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> Successfull</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">except
</span><span class="pas1-space">  </span><span class="pas1-comment">//on E: Exception do
</span><span class="pas1-space">         </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> </span><span class="pas1-symbol">((</span><span class="pas1-identifier">Res1</span><span class="pas1-symbol">&lt;&gt;0)</span><span class="pas1-space"> </span><span class="pas1-reservedword">or</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Res2</span><span class="pas1-symbol">&lt;&gt;0))</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-space">               </span><span class="pas1-reservedword">xraise</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-string">'Unrecognized File'</span><span class="pas1-symbol">));
</span><span class="pas1-space">         </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Function</span><span class="pas1-space"> SaveNetwork</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-identifier">Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Var
</span><span class="pas1-space">   Successfull</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">   F</span><span class="pas1-symbol">:</span><span class="pas1-identifier">TextFile</span><span class="pas1-symbol">;
</span><span class="pas1-space">   i</span><span class="pas1-symbol">,</span><span class="pas1-identifier">j</span><span class="pas1-symbol">,</span><span class="pas1-identifier">k</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   Dosya1</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">File</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//of NWFH;
</span><span class="pas1-space">   Dosya2</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">File</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//of NWWT;
</span><span class="pas1-space">   ExtKonum</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> FClsblr </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> false</span><span class="pas1-symbol">;
</span><span class="pas1-space">     ShowMessage</span><span class="pas1-symbol">(</span><span class="pas1-string">'You can save network if you are registered'</span><span class="pas1-symbol">)
</span><span class="pas1-reservedword">end
else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-identifier">Successfull</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">true</span><span class="pas1-symbol">;
</span><span class="pas1-space">   FileName</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">AnsiUpperCase</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">);</span><span class="pas1-space"> AssignFile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya1</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">);
</span><span class="pas1-space">   ExtKonum</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">pos</span><span class="pas1-symbol">(</span><span class="pas1-string">'.NET'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">);</span><span class="pas1-space"> delete</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">,</span><span class="pas1-identifier">ExtKonum</span><span class="pas1-symbol">,4);
</span><span class="pas1-space">   AssignFile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya2</span><span class="pas1-symbol">,</span><span class="pas1-identifier">FileName</span><span class="pas1-symbol">+</span><span class="pas1-string">'.dat'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-comment">//{$I-}
</span><span class="pas1-space">   Rewrite</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya1</span><span class="pas1-symbol">);</span><span class="pas1-space"> Rewrite</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya2</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-comment">//{$I+}
</span><span class="pas1-space">   </span><span class="pas1-reservedword">if</span><span class="pas1-space"> IOResult</span><span class="pas1-symbol">&lt;&gt;0</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> Successfull</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">false
   </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        </span><span class="pas1-comment">// File Saving Format
</span><span class="pas1-space">        FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNSYS</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">OO</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FLearningRate</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">MO</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FMomentumRate</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">NTR</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNumberOfTraining</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">TRDT</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">Now</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNLR</span><span class="pas1-symbol">:=</span><span class="pas1-string">''</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> FNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">                   FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNLR</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FNetHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">KTMNLR</span><span class="pas1-symbol">+</span><span class="pas1-identifier">Chr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]));

</span><span class="pas1-space">        </span><span class="pas1-comment">//Write(Dosya1,FNetHeader); closefile(Dosya1);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">           </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">              </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">                   FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">FWeights</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">];
</span><span class="pas1-space">                  </span><span class="pas1-comment">//Write(Dosya2,FWeightsinFile);
</span><span class="pas1-space">              </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">           </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">               FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">Biases</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">];
</span><span class="pas1-space">               </span><span class="pas1-comment">//Write(Dosya2,FWeightsinFile);
</span><span class="pas1-space">           </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-comment">//All inputs range
</span><span class="pas1-space">        </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">MinimumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-space">            </span><span class="pas1-comment">//Write(Dosya2,FWeightsinFile);
</span><span class="pas1-space">            FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">MaximumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-space">            </span><span class="pas1-comment">//Write(Dosya2,FWeightsinFile);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">             FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-space">             </span><span class="pas1-comment">//Write(Dosya2,FWeightsinFile);
</span><span class="pas1-space">             FWeightsinFile</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Value</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-space">             </span><span class="pas1-comment">//Write(Dosya2,FWeightsinFile);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">      closefile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Dosya2</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">   result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> Successfull</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">var</span><span class="pas1-space"> aimg</span><span class="pas1-symbol">:</span><span class="pas1-space"> TImage</span><span class="pas1-symbol">;</span><span class="pas1-space">  Form1</span><span class="pas1-symbol">:</span><span class="pas1-space"> TForm</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> RefreshNetworkImage</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Var
</span><span class="pas1-space">   i</span><span class="pas1-symbol">,</span><span class="pas1-identifier">j</span><span class="pas1-symbol">,</span><span class="pas1-identifier">k</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   Sol</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Sag</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Ust</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Alt</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GridX</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GridY</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   HucreSayisi</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   str1</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">   X1</span><span class="pas1-symbol">,</span><span class="pas1-identifier">X2</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Y1</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Y2</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   KoordX</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">   Altmi</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> FInitialized </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-string">'First, you have to Initialize the Network'</span><span class="pas1-symbol">);
</span><span class="pas1-space">        exit</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">    </span><span class="pas1-comment">//form1.getclientrect
</span><span class="pas1-space">    Sol</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Left</span><span class="pas1-symbol">;</span><span class="pas1-space"> Sag</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Clientwidth</span><span class="pas1-symbol">-10;
</span><span class="pas1-space">    </span><span class="pas1-comment">//Ust:=aimg.ClientRect.Top; Alt:=ClientRect.Bottom;
</span><span class="pas1-space">     Ust</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Top</span><span class="pas1-symbol">;</span><span class="pas1-space"> Alt</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Clientheight</span><span class="pas1-symbol">-10;
</span><span class="pas1-space">    aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Color</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">clBlack</span><span class="pas1-symbol">;
</span><span class="pas1-space">    aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Rectangle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Sol</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Ust</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Sag</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Alt</span><span class="pas1-symbol">);

</span><span class="pas1-space">    GridY</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">Trunc</span><span class="pas1-symbol">((</span><span class="pas1-identifier">Alt</span><span class="pas1-symbol">-</span><span class="pas1-identifier">Ust</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">/</span><span class="pas1-space"> nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">);
</span><span class="pas1-space">    SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">,</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">);</span><span class="pas1-space"> SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">,</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">);
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'debug inf nncount:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nnetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">count</span><span class="pas1-symbol">));

</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=1</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        HucreSayisi</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1]);
</span><span class="pas1-space">        GridX</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">Trunc</span><span class="pas1-symbol">((</span><span class="pas1-identifier">Sag</span><span class="pas1-symbol">-</span><span class="pas1-identifier">Sol</span><span class="pas1-symbol">)/</span><span class="pas1-identifier">HucreSayisi</span><span class="pas1-symbol">);
</span><span class="pas1-space">        SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1],</span><span class="pas1-identifier">HucreSayisi</span><span class="pas1-symbol">);</span><span class="pas1-space"> SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1],</span><span class="pas1-identifier">HucreSayisi</span><span class="pas1-symbol">);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            X1</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GridX </span><span class="pas1-reservedword">div</span><span class="pas1-space"> </span><span class="pas1-number">2+</span><span class="pas1-identifier">GridX</span><span class="pas1-symbol">*(</span><span class="pas1-identifier">j</span><span class="pas1-symbol">)-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">;</span><span class="pas1-space"> Y1</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GridY</span><span class="pas1-symbol">*</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">-</span><span class="pas1-identifier">GridY </span><span class="pas1-reservedword">div</span><span class="pas1-space"> </span><span class="pas1-number">2;
</span><span class="pas1-space">            X2</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GridX </span><span class="pas1-reservedword">div</span><span class="pas1-space"> </span><span class="pas1-number">2+</span><span class="pas1-identifier">GridX</span><span class="pas1-symbol">*(</span><span class="pas1-identifier">j</span><span class="pas1-symbol">)+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">;</span><span class="pas1-space"> Y2</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GridY</span><span class="pas1-symbol">*</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">-</span><span class="pas1-identifier">GridY </span><span class="pas1-reservedword">div</span><span class="pas1-space"> </span><span class="pas1-number">2;
</span><span class="pas1-space">            KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">X1</span><span class="pas1-symbol">+(</span><span class="pas1-identifier">X2</span><span class="pas1-symbol">-</span><span class="pas1-identifier">X1</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">div</span><span class="pas1-space"> </span><span class="pas1-number">2;
</span><span class="pas1-space">            KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Y1</span><span class="pas1-symbol">+(</span><span class="pas1-identifier">Y2</span><span class="pas1-symbol">-</span><span class="pas1-identifier">Y1</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">div</span><span class="pas1-space"> </span><span class="pas1-number">2;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count</span><span class="pas1-symbol">-2</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">      </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">           </span><span class="pas1-reservedword">for</span><span class="pas1-space"> k</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">               aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Color</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clSilver</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//RGB(random(255),random(255),random(255));
</span><span class="pas1-space">               aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Width</span><span class="pas1-symbol">:=1;
</span><span class="pas1-space">               aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">MoveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]);
</span><span class="pas1-space">               aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">+1][</span><span class="pas1-identifier">k</span><span class="pas1-symbol">]);
</span><span class="pas1-space">           </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=1</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Count </span><span class="pas1-reservedword">do
</span><span class="pas1-space">        </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">           aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">brush</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Color</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">clNavy</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//RGB(random(255),random(255),random(255));
</span><span class="pas1-space">           aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">ellipse</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]
</span><span class="pas1-space">                                             </span><span class="pas1-symbol">+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">-1][</span><span class="pas1-identifier">j</span><span class="pas1-symbol">]+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">   </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[0])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Color</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">clRed</span><span class="pas1-symbol">;
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Width</span><span class="pas1-symbol">:=1;
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">MoveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">);
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">moveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// ok sa&eth; ucu
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*2);
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">moveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// ok sol ucu
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*2);
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">   j</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">count</span><span class="pas1-symbol">-1;
</span><span class="pas1-space">   </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">[</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">count</span><span class="pas1-symbol">-1])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Color</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">clBlack</span><span class="pas1-symbol">;
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">pen</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Width</span><span class="pas1-symbol">:=1;
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">MoveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">moveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);</span><span class="pas1-space"> </span><span class="pas1-comment">// ok sa&eth; ucu
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*2+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">moveTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);</span><span class="pas1-space"> </span><span class="pas1-comment">// ok sol ucu
</span><span class="pas1-space">        aimg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">LineTo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">KoordX</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">,</span><span class="pas1-identifier">KoordY</span><span class="pas1-symbol">[</span><span class="pas1-identifier">j</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*2+</span><span class="pas1-identifier">FNeuronWidth</span><span class="pas1-symbol">*3);</span><span class="pas1-space">  </span><span class="pas1-comment">//}
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> DrawNetwork</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">   </span><span class="pas1-reservedword">with</span><span class="pas1-space"> aimg </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Brush</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Color</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">RGB</span><span class="pas1-symbol">(58,110,165);</span><span class="pas1-space"> </span><span class="pas1-comment">//clWhite; //RGB(58,110,165);
</span><span class="pas1-space">     Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Brush</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Style</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">bsSolid</span><span class="pas1-symbol">;
</span><span class="pas1-space">     Canvas</span><span class="pas1-symbol">.</span><span class="pas1-identifier">FillRect</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ClientRect</span><span class="pas1-symbol">);
</span><span class="pas1-space">     RefreshNetworkImage</span><span class="pas1-symbol">;
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> CloseClick</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Sender</span><span class="pas1-symbol">:</span><span class="pas1-space"> TObject</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> action</span><span class="pas1-symbol">:</span><span class="pas1-space"> TCloseAction</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">   </span><span class="pas1-comment">//if MessageDlg('Wanna Leave?',mtConfirmation,[mbYes, mbNo],0)= mrYes then begin
</span><span class="pas1-space">   </span><span class="pas1-comment">//for i:= 1 to QB+1 do bArr[i].Free;
</span><span class="pas1-space">   </span><span class="pas1-comment">//ProcessmessagesON;
</span><span class="pas1-space">   action</span><span class="pas1-symbol">:=</span><span class="pas1-space"> caFree</span><span class="pas1-symbol">;
</span><span class="pas1-space">   writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'NN From Free and destroy finished'</span><span class="pas1-symbol">);
</span><span class="pas1-space"> </span><span class="pas1-comment">//  TForm1_Destroy(self)
</span><span class="pas1-space"> </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-comment">//var Form1: TForm;
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> loaddrawform</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space"> Form1</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TForm</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">self</span><span class="pas1-symbol">);
</span><span class="pas1-space"> </span><span class="pas1-reservedword">with</span><span class="pas1-space"> form1 </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  setBounds</span><span class="pas1-symbol">(118,</span><span class="pas1-space"> </span><span class="pas1-number">185,</span><span class="pas1-space"> </span><span class="pas1-number">1154,</span><span class="pas1-space"> </span><span class="pas1-number">648);
</span><span class="pas1-space">  Caption</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'NeuralnetworkTree Graph Version 2.1 mX4 '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                       </span><span class="pas1-string">' RMS ERROR:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'%10.5f'</span><span class="pas1-symbol">,[</span><span class="pas1-comment">{nn1.}</span><span class="pas1-identifier">FRMSError</span><span class="pas1-symbol">]);
</span><span class="pas1-space">  icon</span><span class="pas1-symbol">.</span><span class="pas1-identifier">loadfromresourcename</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hinstance</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'XPASCALCOIN'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  Color</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clBtnFace
  onclose</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-symbol">@</span><span class="pas1-identifier">CloseClick</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//ClientRect.Top:= 12;
</span><span class="pas1-space">  show
  aimg</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TImage</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> aimg  </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    parent</span><span class="pas1-symbol">:=</span><span class="pas1-space"> form1</span><span class="pas1-symbol">;
</span><span class="pas1-space">    align</span><span class="pas1-symbol">:=</span><span class="pas1-space"> alclient</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
 </span><span class="pas1-reservedword">end
end</span><span class="pas1-symbol">;</span><span class="pas1-space">  

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetInputMinimums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> InputMinimums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">           MinimumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">InputMinimums</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetAllInputRange</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Minimum</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Maximum</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        MinimumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Minimum</span><span class="pas1-symbol">;
</span><span class="pas1-space">        MaximumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Maximum</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetAllOutputRange</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Minimum</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Maximum</span><span class="pas1-symbol">:</span><span class="pas1-identifier">double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Minimum</span><span class="pas1-symbol">;
</span><span class="pas1-space">      MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Maximum</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetOutputMaximums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> OutputMaximums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">        MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">OutputMaximums</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetOutputMinimums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> OutputMinimums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">          MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">OutputMinimums</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> SetInputMaximums</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> InputMaximums </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Begin
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">          MaximumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">InputMaximums</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SetExpectedOutputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Outputs</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> OKIDOK</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  OKIDOK</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">false</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">     </span><span class="pas1-reservedword">if</span><span class="pas1-space"> MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]&lt;&gt;</span><span class="pas1-identifier">MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> OKIDOK</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">true</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> OKIDOK </span><span class="pas1-reservedword">then
</span><span class="pas1-space">   </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    Desired</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">ScaledValue</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])
</span><span class="pas1-space">  </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Desired</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    Desired</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SetInputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Inputs</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> OKIDOK</span><span class="pas1-symbol">:</span><span class="pas1-identifier">boolean</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  OKIDOK</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">false</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//writeln('debug len check '+itoa(length(MinimumInputs)));
</span><span class="pas1-space">  </span><span class="pas1-comment">//writeln('debug len check '+itoa(length(MaximumOutputs)));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space">  </span><span class="pas1-comment">// fix -1  !
</span><span class="pas1-space">      </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">MinimumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]&lt;&gt;</span><span class="pas1-identifier">MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> OKIDOK</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">true</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> OKIDOK </span><span class="pas1-reservedword">then
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">       Neurons</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">ScaledValue</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">MinimumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">],</span><span class="pas1-identifier">MaximumInputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])
</span><span class="pas1-space">    </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> High</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">        Neurons</span><span class="pas1-symbol">[0][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> GetOutputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Var</span><span class="pas1-space"> Outputs</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">Var</span><span class="pas1-space"> i</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;</span><span class="pas1-space">  hin</span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  hin</span><span class="pas1-symbol">:=</span><span class="pas1-space"> high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">neurons</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> FOutputNumber</span><span class="pas1-symbol">-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">        Outputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">hin</span><span class="pas1-symbol">][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> FOutputNumber</span><span class="pas1-symbol">-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">        Outputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]*(</span><span class="pas1-identifier">MaximumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]-</span><span class="pas1-identifier">MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">])+</span><span class="pas1-identifier">MinimumOutputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> GetOutputsFromInputs</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Inputs</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> Outputs</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  SetInputs</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">);
</span><span class="pas1-space">  ForwardProcessing</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> FOutputNumber</span><span class="pas1-symbol">-1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">      Outputs</span><span class="pas1-symbol">[</span><span class="pas1-identifier">i</span><span class="pas1-symbol">]:=</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">[</span><span class="pas1-identifier">high</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Neurons</span><span class="pas1-symbol">)][</span><span class="pas1-identifier">i</span><span class="pas1-symbol">];
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">var</span><span class="pas1-space"> i</span><span class="pas1-symbol">,</span><span class="pas1-identifier">j</span><span class="pas1-symbol">,</span><span class="pas1-space"> iterators</span><span class="pas1-symbol">:</span><span class="pas1-identifier">integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    NN1</span><span class="pas1-symbol">:</span><span class="pas1-identifier">TNeuralNetwork</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Inputs</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">:</span><span class="pas1-reservedword">array</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> double</span><span class="pas1-symbol">;


</span><span class="pas1-reservedword">begin</span><span class="pas1-space"> </span><span class="pas1-comment">//@main

</span><span class="pas1-space">   createNetwork</span><span class="pas1-symbol">(</span><span class="pas1-identifier">self</span><span class="pas1-symbol">);
</span><span class="pas1-space">   iterators</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">15000;</span><span class="pas1-space">   </span><span class="pas1-comment">//150000
</span><span class="pas1-space">   SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">,2);</span><span class="pas1-space"> SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">,1);</span><span class="pas1-space"> </span><span class="pas1-comment">//Set array for inputs and outputs
</span><span class="pas1-space">   
  </span><span class="pas1-comment">{NN1.}</span><span class="pas1-identifier">nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Clear</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">// Clear network structure
</span><span class="pas1-space">    nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Add</span><span class="pas1-symbol">(</span><span class="pas1-string">'2'</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// Number of inputs
</span><span class="pas1-space">    nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Add</span><span class="pas1-symbol">(</span><span class="pas1-string">'4'</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// Number of hidden neurons
</span><span class="pas1-space">    </span><span class="pas1-comment">//nNetwork.Add('3'); // Number of hidden neurons
</span><span class="pas1-space">    nNetwork</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Add</span><span class="pas1-symbol">(</span><span class="pas1-string">'1'</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// Number of outputs
</span><span class="pas1-space">    Initialize</span><span class="pas1-symbol">(</span><span class="pas1-identifier">true</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// Initialize neural network
</span><span class="pas1-space">   </span><span class="pas1-comment">{NN1.}</span><span class="pas1-identifier">SetAllInputRange</span><span class="pas1-symbol">(0,1);</span><span class="pas1-space"> SetAllOutputRange</span><span class="pas1-symbol">(0,1);
</span><span class="pas1-space">  
  processmessagesOFF</span><span class="pas1-symbol">;
</span><span class="pas1-space">   writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'train neural network start..:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">iterators</span><span class="pas1-symbol">)+</span><span class="pas1-string">' iterators '</span><span class="pas1-symbol">);</span><span class="pas1-space">  
 </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=1</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> iterators </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-comment">//train network for 150000 iterations
</span><span class="pas1-space">  </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    Inputs</span><span class="pas1-symbol">[0]:=</span><span class="pas1-identifier">random</span><span class="pas1-symbol">(2);</span><span class="pas1-space"> Inputs</span><span class="pas1-symbol">[1]:=</span><span class="pas1-identifier">random</span><span class="pas1-symbol">(2);</span><span class="pas1-space"> </span><span class="pas1-comment">//Specify inputs
</span><span class="pas1-space">    </span><span class="pas1-comment">{NN1.}</span><span class="pas1-identifier">SetInputs</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">//Set inputs specified above
</span><span class="pas1-space">    Outputs</span><span class="pas1-symbol">[0]:=</span><span class="pas1-identifier">Round</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">[0])</span><span class="pas1-space"> </span><span class="pas1-reservedword">xor</span><span class="pas1-space"> round</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Inputs</span><span class="pas1-symbol">[1]);
</span><span class="pas1-space">    </span><span class="pas1-comment">{NN1.}</span><span class="pas1-identifier">SetExpectedOutputs</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">//Set expected outputs
</span><span class="pas1-space">    </span><span class="pas1-comment">{NN1.}</span><span class="pas1-identifier">Train</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//Train
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">   writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'train neural network finished:'</span><span class="pas1-symbol">);
</span><span class="pas1-space">   processmessagesON</span><span class="pas1-symbol">;</span><span class="pas1-space">  
  
  writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'RMS ERROR:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'%20.15f'</span><span class="pas1-symbol">,[</span><span class="pas1-comment">{nn1.}</span><span class="pas1-identifier">FRMSError</span><span class="pas1-symbol">]));
</span><span class="pas1-space">  </span><span class="pas1-comment">// Querying network
</span><span class="pas1-space">  writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'evaluate neural network..'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">for</span><span class="pas1-space"> i</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> j</span><span class="pas1-symbol">:=0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> </span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      Inputs</span><span class="pas1-symbol">[0]:=</span><span class="pas1-identifier">i</span><span class="pas1-symbol">;</span><span class="pas1-space"> Inputs</span><span class="pas1-symbol">[1]:=</span><span class="pas1-identifier">j</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//Specify inputs
</span><span class="pas1-space">      </span><span class="pas1-comment">{NN1.}</span><span class="pas1-identifier">GetOutputsFromInputs</span><span class="pas1-symbol">(</span><span class="pas1-identifier">inputs</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">//Obtain outputs from network
</span><span class="pas1-space">      writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'i:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">IntToStr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">i</span><span class="pas1-symbol">)+</span><span class="pas1-string">' j:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">IntToStr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">j</span><span class="pas1-symbol">)+</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'%20.15f'</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">Outputs</span><span class="pas1-symbol">[0]]));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  loaddrawform
  DrawNetwork</span><span class="pas1-symbol">();</span><span class="pas1-space"> 
  destroyNetwork</span><span class="pas1-symbol">();</span><span class="pas1-space">  
 </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">.
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">.

</span><span class="pas1-reservedword">ref</span><span class="pas1-symbol">:</span><span class="pas1-space"> RMS ERROR</span><span class="pas1-symbol">:</span><span class="pas1-space">   </span><span class="pas1-float">0.000548003484465
</span><span class="pas1-comment">//15000
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.037869802448942
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.966986423235839
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.971077640105349
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.008661361371759
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">18/07/2023</span><span class="pas1-space"> </span><span class="pas1-number">21:30:56</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">6.420</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">56%</span><span class="pas1-space"> use
 
RMS ERROR</span><span class="pas1-symbol">:</span><span class="pas1-space">   </span><span class="pas1-float">0.000070713668184
</span><span class="pas1-comment">//15000
</span><span class="pas1-identifier">evaluate neural network</span><span class="pas1-symbol">..
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.011878797582992
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.974239811246186
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.978344524047223
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.025932108096062
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">18/07/2023</span><span class="pas1-space"> </span><span class="pas1-number">21:35:11</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">5.357</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">57%</span><span class="pas1-space"> use
 
train neural network finished</span><span class="pas1-symbol">:
</span><span class="pas1-identifier">RMS ERROR</span><span class="pas1-symbol">:</span><span class="pas1-space">   </span><span class="pas1-float">0.000510621737779
</span><span class="pas1-identifier">evaluate neural network</span><span class="pas1-symbol">..
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.044512254301975
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.968422941488127
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.968073948178052
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.007621985588518
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">18/07/2023</span><span class="pas1-space"> </span><span class="pas1-number">21:42:02</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">7.484</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">56%</span><span class="pas1-space"> use
train neural network start</span><span class="pas1-symbol">..:15000</span><span class="pas1-space"> iterators 
train neural network finished</span><span class="pas1-symbol">:
</span><span class="pas1-identifier">RMS ERROR</span><span class="pas1-symbol">:</span><span class="pas1-space">   </span><span class="pas1-float">0.000787632198274
</span><span class="pas1-identifier">evaluate neural network</span><span class="pas1-symbol">..
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.043969287157934
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.978207384040024
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.960416461147976
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.005429182872161
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">18/07/2023</span><span class="pas1-space"> </span><span class="pas1-number">21:55:06</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">5.704</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">55%</span><span class="pas1-space"> use
train neural network finished</span><span class="pas1-symbol">:
</span><span class="pas1-identifier">RMS ERROR</span><span class="pas1-symbol">:</span><span class="pas1-space">   </span><span class="pas1-float">0.000023487221961</span><span class="pas1-space"> 
</span><span class="pas1-comment">//150000
</span><span class="pas1-identifier">evaluate neural network</span><span class="pas1-symbol">..
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.000069973794392
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:0</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.993102057958661
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:0</span><span class="pas1-space">   </span><span class="pas1-float">0.993146501806906
</span><span class="pas1-identifier">i</span><span class="pas1-symbol">:1</span><span class="pas1-space"> j</span><span class="pas1-symbol">:1</span><span class="pas1-space">   </span><span class="pas1-float">0.008038882760312
</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">18/07/2023</span><span class="pas1-space"> </span><span class="pas1-number">21:38:07</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0:0:</span><span class="pas1-float">59.497</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">56%</span><span class="pas1-space"> use

</span></code></pre><!--EndFragment--></body>
</html>